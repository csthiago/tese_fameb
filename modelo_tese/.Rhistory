preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
log_model <- logistic_reg() %>%
set_engine("glm")
log_wf <- workflow() %>%
add_formula(sarscov2~dorgarganta+dorolho+artralgia+idade*diarreia+anosmia*sexo+idade*espirro+idade*tosse+manchacorpo+idade*mialgia+sexo*fraqueza) %>%
add_model(log_model)
glm_res <- log_wf %>%
fit_resamples(
resamples = dt_boot,
metrics = metric_set(
recall, precision, f_meas,
accuracy, kap,
roc_auc, sens, spec),
control = control_resamples(save_pred = TRUE,
extract = get_model)
)
get_model <- function(x) {
pull_workflow_fit(x) %>% tidy()
}
glm_res <- log_wf %>%
fit_resamples(
resamples = dt_boot,
metrics = metric_set(
recall, precision, f_meas,
accuracy, kap,
roc_auc, sens, spec),
control = control_resamples(save_pred = TRUE,
extract = get_model)
)
dt_boot <- bootstraps(dt, times=50)
glm_res <- log_wf %>%
fit_resamples(
resamples = dt_boot,
metrics = metric_set(
recall, precision, f_meas,
accuracy, kap,
roc_auc, sens, spec),
control = control_resamples(save_pred = TRUE,
extract = get_model)
)
glm_res %>% collect_metrics(summarize=F) %>% filter(.metric=="roc_auc") %>% group_by(id2) %>% summarise("média"=mean(.estimate))
glm_res %>% collect_metrics(summarize=F) %>% filter(.metric=="roc_auc") %>% group_by(id) %>% summarise("média"=mean(.estimate))
glm_res$.extracts[[1]][[1]]
all_coef <- map_dfr(glm_res$.extracts, ~ .x[[1]][[1]])
glm_res
glm_pred <- glm_res %>% collect_predictions()
glm_pred %>%
group_by(id) %>% # id contains our folds
roc_curve(sarscov2, .pred_Negativo) %>%
autoplot() + firatheme::theme_fira()+labs(title="Curva ROC do modelo logístico com interações",color="Cross-Validation", caption = "10 folds com 5 repetições cada")
glm_res %>% collect_metrics(summarize=F) %>% summarise("média"=mean(.estimate))
glm_res %>% collect_metrics(summarize=F) %>% group_by(.metric) %>% summarise("média"=mean(.estimate))
dt_boot <- bootstraps(dt, times=200)
glm_res <- log_wf %>%
fit_resamples(
resamples = dt_boot,
metrics = metric_set(
recall, precision, f_meas,
accuracy, kap,
roc_auc, sens, spec),
control = control_resamples(save_pred = TRUE,
extract = get_model)
)
glm_res %>% collect_metrics(summarize=F) %>% group_by(.metric) %>% summarise("média"=mean(.estimate))
dt_boot <- bootstraps(dt, times=2000)
glm_res <- log_wf %>%
fit_resamples(
resamples = dt_boot,
metrics = metric_set(
recall, precision, f_meas,
accuracy, kap,
roc_auc, sens, spec),
control = control_resamples(save_pred = TRUE,
extract = get_model)
)
glm_res %>% collect_metrics(summarize=F) %>% group_by(.metric) %>% summarise("média"=mean(.estimate))
fit1<- glm(sarscov2~idade*faltadear,dt,family='binomial')
fit2<- glm(sarscov2~idade*obstrucaonasal,dt,family='binomial')
fit3<- glm(sarscov2~idade*dorgarganta,dt,family='binomial')
fit4<- glm(sarscov2~idade*espirro,dt,family='binomial')
fit5<- glm(sarscov2~idade*dorface,dt,family='binomial')
fit6<- glm(sarscov2~idade*dorcabeca,dt,family='binomial')
fit7<- glm(sarscov2~idade*dorolho,dt,family='binomial')
fit8<- glm(sarscov2~idade*dorouvido,dt,family='binomial')
fit9<- glm(sarscov2~idade*mialgia,dt,family='binomial')
fit10<- glm(sarscov2~idade*artralgia,dt,family='binomial')
fit11<- glm(sarscov2~idade*dorpeito,dt,family='binomial')
fit12<- glm(sarscov2~idade*dorabdominal,dt,family='binomial')
fit13<- glm(sarscov2~idade*manchacorpo,dt,family='binomial')
fit14<- glm(sarscov2~idade*fraqueza,dt,family='binomial')
fit15<- glm(sarscov2~idade*perdaapetite,dt,family='binomial')
fit16<- glm(sarscov2~idade*enjoo,dt,family='binomial')
fit17<- glm(sarscov2~idade*diarreia,dt,family='binomial')
fit18<- glm(sarscov2~idade*`Alteração de Olfato`,dt,family='binomial')
fit19<- glm(sarscov2~idade*pressaobaixa,dt,family='binomial')
fit20<- glm(sarscov2~idade*`Alteração de paladar`,dt,family='binomial')
fit21<- glm(sarscov2~idade*febre,dt,family='binomial')
fit22<- glm(sarscov2~idade*tosse,dt,family='binomial')
forestmodels <- plot_models(fit1,fit2,fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10,fit11,fit12,fit13,fit14,fit15,fit16,fit17,fit18,fit19,fit20,fit21,fit22,rm.terms = c("sexoMulher","idade"),
colors="black",
show.legend = F,
show.p = TRUE,
p.shape = F)
fit18<- glm(sarscov2~idade*anosmia,dt,family='binomial')
fit20<- glm(sarscov2~idade*ageusia,dt,family='binomial')
fit21<- glm(sarscov2~idade*febre,dt,family='binomial')
fit22<- glm(sarscov2~idade*tosse,dt,family='binomial')
forestmodels <- plot_models(fit1,fit2,fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10,fit11,fit12,fit13,fit14,fit15,fit16,fit17,fit18,fit19,fit20,fit21,fit22,rm.terms = c("sexoMulher","idade"),
colors="black",
show.legend = F,
show.p = TRUE,
p.shape = F)
data_odds <- forestmodels$data
data_odds$term <- str_remove(data_odds$term,"Sim") %>% str_to_title(data_odds$term)
data_odds <- data_odds %>% mutate(posi=conf.low>1)
data_odds %>% mutate(term=fct_reorder(term,estimate)) %>% ggplot(aes(term,estimate,ymin=conf.low,ymax=conf.high,colour=posi)) +
geom_pointrange(size=1)+coord_flip()+geom_hline(yintercept=1, lty=2)+
labs(x="Variável", y="Odds Ratio (95% IC)",title="SARS-CoV-2 Positivo", caption="Efeito Principal e Interação com Sexo")+
gghighlight::gghighlight((min(conf.low)>1)|max(conf.high)<1)+  theme_minimal()+theme(legend.position = "none")
fit1<- glm(sarscov2~sexo*faltadear,dt,family='binomial')
fit2<- glm(sarscov2~sexo*obstrucaonasal,dt,family='binomial')
fit3<- glm(sarscov2~sexo*dorgarganta,dt,family='binomial')
fit4<- glm(sarscov2~sexo*espirro,dt,family='binomial')
fit5<- glm(sarscov2~sexo*dorface,dt,family='binomial')
fit6<- glm(sarscov2~sexo*dorcabeca,dt,family='binomial')
fit7<- glm(sarscov2~sexo*dorolho,dt,family='binomial')
fit8<- glm(sarscov2~sexo*dorouvido,dt,family='binomial')
fit9<- glm(sarscov2~sexo*mialgia,dt,family='binomial')
fit10<- glm(sarscov2~sexo*artralgia,dt,family='binomial')
fit11<- glm(sarscov2~sexo*dorpeito,dt,family='binomial')
fit12<- glm(sarscov2~sexo*dorabdominal,dt,family='binomial')
fit13<- glm(sarscov2~sexo*manchacorpo,dt,family='binomial')
fit14<- glm(sarscov2~sexo*fraqueza,dt,family='binomial')
fit15<- glm(sarscov2~sexo*perdaapetite,dt,family='binomial')
fit16<- glm(sarscov2~sexo*enjoo,dt,family='binomial')
fit17<- glm(sarscov2~sexo*diarreia,dt,family='binomial')
fit18<- glm(sarscov2~sexo*anosmia,dt,family='binomial')
fit19<- glm(sarscov2~sexo*pressaobaixa,dt,family='binomial')
fit20<- glm(sarscov2~sexo*ageusia,dt,family='binomial')
fit21<- glm(sarscov2~sexo*febre,dt,family='binomial')
fit22<- glm(sarscov2~sexo*tosse,dt,family='binomial')
forestmodels <- plot_models(fit1,fit2,fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10,fit11,fit12,fit13,fit14,fit15,fit16,fit17,fit18,fit19,fit20,fit21,fit22,rm.terms = c("sexoMulher","idade"),
colors="black",
show.legend = F,
show.p = TRUE,
p.shape = F)
data_odds <- forestmodels$data
data_odds$term <- str_remove(data_odds$term,"Sim") %>% str_to_title(data_odds$term)
data_odds <- data_odds %>% mutate(posi=conf.low>1)
data_odds %>% mutate(term=fct_reorder(term,estimate)) %>% ggplot(aes(term,estimate,ymin=conf.low,ymax=conf.high,colour=posi)) +
geom_pointrange(size=1)+coord_flip()+geom_hline(yintercept=1, lty=2)+
labs(x="Variável", y="Odds Ratio (95% IC)",title="SARS-CoV-2 Positivo", caption="Efeito Principal e Interação com Sexo")+
gghighlight::gghighlight((min(conf.low)>1)|max(conf.high)<1)+  theme_minimal()+theme(legend.position = "none")
View(data_odds)
fit1<- glm(sarscov2~idade*faltadear,dt,family='binomial')
fit2<- glm(sarscov2~idade*obstrucaonasal,dt,family='binomial')
fit3<- glm(sarscov2~idade*dorgarganta,dt,family='binomial')
fit4<- glm(sarscov2~idade*espirro,dt,family='binomial')
fit5<- glm(sarscov2~idade*dorface,dt,family='binomial')
fit6<- glm(sarscov2~idade*dorcabeca,dt,family='binomial')
fit7<- glm(sarscov2~idade*dorolho,dt,family='binomial')
fit8<- glm(sarscov2~idade*dorouvido,dt,family='binomial')
fit9<- glm(sarscov2~idade*mialgia,dt,family='binomial')
fit10<- glm(sarscov2~idade*artralgia,dt,family='binomial')
fit11<- glm(sarscov2~idade*dorpeito,dt,family='binomial')
fit12<- glm(sarscov2~idade*dorabdominal,dt,family='binomial')
fit13<- glm(sarscov2~idade*manchacorpo,dt,family='binomial')
fit14<- glm(sarscov2~idade*fraqueza,dt,family='binomial')
fit15<- glm(sarscov2~idade*perdaapetite,dt,family='binomial')
fit16<- glm(sarscov2~idade*enjoo,dt,family='binomial')
fit17<- glm(sarscov2~idade*diarreia,dt,family='binomial')
fit18<- glm(sarscov2~idade*anosmia,dt,family='binomial')
fit19<- glm(sarscov2~idade*pressaobaixa,dt,family='binomial')
fit20<- glm(sarscov2~idade*ageusia,dt,family='binomial')
fit21<- glm(sarscov2~idade*febre,dt,family='binomial')
fit22<- glm(sarscov2~idade*tosse,dt,family='binomial')
forestmodels <- plot_models(fit1,fit2,fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10,fit11,fit12,fit13,fit14,fit15,fit16,fit17,fit18,fit19,fit20,fit21,fit22,rm.terms = c("sexoMulher","idade"),
colors="black",
show.legend = F,
show.p = TRUE,
p.shape = F)
data_odds <- forestmodels$data
forestmodels
View(data_odds)
fit1 <- glm(sarscov2~faltadear,dt,family="binomial")
fit2 <- glm(sarscov2~obstrucaonasal,dt,family="binomial")
fit3 <- glm(sarscov2~dorgarganta,dt,family="binomial")
fit4 <- glm(sarscov2~espirro,dt,family="binomial")
fit5 <- glm(sarscov2~dorface,dt,family="binomial")
fit6 <- glm(sarscov2~dorcabeca,dt,family="binomial")
fit7 <- glm(sarscov2~dorolho,dt,family="binomial")
fit8 <- glm(sarscov2~dorouvido,dt,family="binomial")
fit9 <- glm(sarscov2~mialgia,dt,family="binomial")
fit10 <- glm(sarscov2~artralgia,dt,family="binomial")
fit11 <- glm(sarscov2~dorpeito,dt,family="binomial")
fit12 <- glm(sarscov2~dorabdominal,dt,family="binomial")
fit13 <- glm(sarscov2~manchacorpo,dt,family="binomial")
fit14 <- glm(sarscov2~fraqueza,dt,family="binomial")
fit15 <- glm(sarscov2~perdaapetite,dt,family="binomial")
fit16 <- glm(sarscov2~enjoo,dt,family="binomial")
fit17 <- glm(sarscov2~diarreia,dt,family="binomial")
fit18 <- glm(sarscov2~anosmia,dt,family="binomial")
fit19 <- glm(sarscov2~pressaobaixa,dt,family="binomial")
fit20 <- glm(sarscov2~ageusia,dt,family="binomial")
fit21 <- glm(sarscov2~febre,dt,family="binomial")
fit22 <- glm(sarscov2~tosse,dt,family="binomial")
forestmodels <- plot_models(fit1,fit2,fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10,fit11,fit12,fit13,fit14,fit15,fit16,fit17,fit18,fit19,fit20,fit21,fit22,rm.terms = c("sexoMulher","idade"),
colors="black",
show.legend = F,
show.p = TRUE,
p.shape = F)
data_odds <- forestmodels$data
data_odds %>% mutate(term=fct_reorder(term,estimate)) %>% ggplot(aes(term,estimate,ymin=conf.low,ymax=conf.high)) + geom_pointrange()+coord_flip()+geom_hline(yintercept=1, lty=2)+
labs(x="Variável", y="Odds Ratio (95% IC)",title="SARS-CoV-2 Positivo", caption="Ajustado para idade e sexo")+theme_minimal()
fit1<- glm(sarscov2~sexo*faltadear,dt,family='binomial')
fit2<- glm(sarscov2~sexo*obstrucaonasal,dt,family='binomial')
fit3<- glm(sarscov2~sexo*dorgarganta,dt,family='binomial')
fit4<- glm(sarscov2~sexo*espirro,dt,family='binomial')
fit5<- glm(sarscov2~sexo*dorface,dt,family='binomial')
fit6<- glm(sarscov2~sexo*dorcabeca,dt,family='binomial')
fit7<- glm(sarscov2~sexo*dorolho,dt,family='binomial')
fit8<- glm(sarscov2~sexo*dorouvido,dt,family='binomial')
fit9<- glm(sarscov2~sexo*mialgia,dt,family='binomial')
fit10<- glm(sarscov2~sexo*artralgia,dt,family='binomial')
fit11<- glm(sarscov2~sexo*dorpeito,dt,family='binomial')
fit12<- glm(sarscov2~sexo*dorabdominal,dt,family='binomial')
fit13<- glm(sarscov2~sexo*manchacorpo,dt,family='binomial')
fit14<- glm(sarscov2~sexo*fraqueza,dt,family='binomial')
fit15<- glm(sarscov2~sexo*perdaapetite,dt,family='binomial')
fit16<- glm(sarscov2~sexo*enjoo,dt,family='binomial')
fit17<- glm(sarscov2~sexo*diarreia,dt,family='binomial')
fit18<- glm(sarscov2~sexo*anosmia,dt,family='binomial')
fit19<- glm(sarscov2~sexo*pressaobaixa,dt,family='binomial')
fit20<- glm(sarscov2~sexo*ageusia,dt,family='binomial')
fit21<- glm(sarscov2~sexo*febre,dt,family='binomial')
fit22<- glm(sarscov2~sexo*tosse,dt,family='binomial')
forestmodels <- plot_models(fit1,fit2,fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10,fit11,fit12,fit13,fit14,fit15,fit16,fit17,fit18,fit19,fit20,fit21,fit22,rm.terms = c("sexoMulher","idade"),
colors="black",
show.legend = F,
show.p = TRUE,
p.shape = F)
data_odds1 <- forestmodels$data
fit1<- glm(sarscov2~idade*faltadear,dt,family='binomial')
fit2<- glm(sarscov2~idade*obstrucaonasal,dt,family='binomial')
fit3<- glm(sarscov2~idade*dorgarganta,dt,family='binomial')
fit4<- glm(sarscov2~idade*espirro,dt,family='binomial')
fit5<- glm(sarscov2~idade*dorface,dt,family='binomial')
fit6<- glm(sarscov2~idade*dorcabeca,dt,family='binomial')
fit7<- glm(sarscov2~idade*dorolho,dt,family='binomial')
fit8<- glm(sarscov2~idade*dorouvido,dt,family='binomial')
fit9<- glm(sarscov2~idade*mialgia,dt,family='binomial')
fit10<- glm(sarscov2~idade*artralgia,dt,family='binomial')
fit11<- glm(sarscov2~idade*dorpeito,dt,family='binomial')
fit12<- glm(sarscov2~idade*dorabdominal,dt,family='binomial')
fit13<- glm(sarscov2~idade*manchacorpo,dt,family='binomial')
fit14<- glm(sarscov2~idade*fraqueza,dt,family='binomial')
fit15<- glm(sarscov2~idade*perdaapetite,dt,family='binomial')
fit16<- glm(sarscov2~idade*enjoo,dt,family='binomial')
fit17<- glm(sarscov2~idade*diarreia,dt,family='binomial')
fit18<- glm(sarscov2~idade*anosmia,dt,family='binomial')
fit19<- glm(sarscov2~idade*pressaobaixa,dt,family='binomial')
fit20<- glm(sarscov2~idade*ageusia,dt,family='binomial')
fit21<- glm(sarscov2~idade*febre,dt,family='binomial')
fit22<- glm(sarscov2~idade*tosse,dt,family='binomial')
forestmodels <- plot_models(fit1,fit2,fit3,fit4,fit5,fit6,fit7,fit8,fit9,fit10,fit11,fit12,fit13,fit14,fit15,fit16,fit17,fit18,fit19,fit20,fit21,fit22,rm.terms = c("sexoMulher","idade"),
colors="black",
show.legend = F,
show.p = TRUE,
p.shape = F)
data_odds2 <- forestmodels$data
View(data_odds1)
View(data_odds2)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
log_wf <- workflow() %>%
add_formula(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa) %>%
add_model(log_model)
get_model <- function(x) {
pull_workflow_fit(x) %>% tidy()
}
glm_res <- log_wf %>%
fit_resamples(
resamples = dt_boot,
metrics = metric_set(
recall, precision, f_meas,
accuracy, kap,
roc_auc, sens, spec),
control = control_resamples(save_pred = TRUE,
extract = get_model)
)
options(yardstick.event_first = FALSE)
glm_res %>% collect_metrics(summarize=F) %>% group_by(.metric) %>% summarise("média"=mean(.estimate))
glm_pred <- glm_res %>% collect_predictions()
glm_pred %>%
group_by(id) %>% # id contains our folds
roc_curve(sarscov2, .pred_Negativo) %>%
autoplot() + firatheme::theme_fira()+labs(title="Curva ROC do modelo logístico com interações",color="Cross-Validation", caption = "10 folds com 5 repetições cada")
options(yardstick.event_first = FALSE)
dt_boot <- bootstraps(dt, times=200)
log_model <- logistic_reg() %>%
set_engine("glm")
log_wf <- workflow() %>%
add_formula(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa) %>%
add_model(log_model)
get_model <- function(x) {
pull_workflow_fit(x) %>% tidy()
}
glm_res <- log_wf %>%
fit_resamples(
resamples = dt_boot,
metrics = metric_set(
recall, precision, f_meas,
accuracy, kap,
roc_auc, sens, spec),
control = control_resamples(save_pred = TRUE,
extract = get_model)
)
glm_res %>% collect_metrics(summarize=F) %>% group_by(.metric) %>% summarise("média"=mean(.estimate))
glm_res <- log_wf %>%
fit_resamples(
resamples = dt_boot,
metrics = metric_set(
recall, precision, f_meas,
accuracy, kap,
roc_auc, sens, spec),
control = control_resamples(save_pred = TRUE,
event_level = "second",
extract = get_model)
)
glm_res %>% collect_metrics(summarize=F) %>% group_by(.metric) %>% summarise("média"=mean(.estimate))
summary(model)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa+sexo*idade,dt,family = binomial)
summary(model)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
summary(model)
broom::tidy(model)
broom::tidy(model,exponentiate=T)
broom::tidy(model,exponentiate=T) %>% view()
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse,dt,family = binomial)
broom::tidy(model,exponentiate=T) %>% view()
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
broom::tidy(model,exponentiate=T) %>% view()
plot_model(model, type = "pred", terms = c("sexo","pressaobaixa"))
plot_model(model, type = "pred", terms = c("idade","febre"))
plot_model(model, type = "pred", terms = c("idade","diarreia"))
plot_model(model, type = "pred", terms = c("idade","tosse"))
plot_model(model, type = "pred", terms = c("sexo","faltadear"))
plot_model(model, type = "pred", terms = c("sexo","pressaobaxia"))
plot_model(model, type = "pred", terms = c("sexo","pressaobaixa"))
vif(model)
chisq.test(dt$artralgia,dt$fraqueza)
chisq.test(dt$artralgia,dt$mialgia)
chisq.test(dt$artralgia,dt$febre)
chisq.test(dt$artralgia,dt$espirro)
chisq.test(dt$artralgia,dt$dorolho)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
summary(model)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
summary(model)
View(data_odds)
model1 <- glm(sarscov2~fraqueza*artralgia,dt,family = binomial)
summary(model1)
model1 <- glm(sarscov2~sexo*pressabaixa,dt,family = binomial)
summary(model1)
model1 <- glm(sarscov2~sexo*pressabaixa,dt,family = binomial)
summary(model1)
model1 <- glm(sarscov2~sexo*pressaobaixa,dt,family = binomial)
summary(model1)
table(dt$pressaobaixa)
model1 <- glm(sarscov2~sexo*faltadear,dt,family = binomial)
summary(model1)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
model <- glm(sarscov2~anosmia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
model <- glm(sarscov2~anosmia*ageusia*sexo+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
preds <- predict(model,dt,type = "response")
pROC::roc(dt$sarscov2,preds)
summary(model)
model <- glm(sarscov2~anosmia*sexo+anosmia*ageusia+espirro+febre+dorgarganta+fraqueza+artralgia+dorface+faltadear*sexo+perdaapetite+dorolho+idade*diarreia+idade*tosse+sexo*pressaobaixa,dt,family = binomial)
summary(model)
fisher.test(dt$sexo,dt$sarscov2)
# Teste random effect
m_zero <- glm(sarscov2~1,dt,family = binomial)
knitr::opts_chunk$set(echo = F, warning = F,message = F)
library(lme4)
m_random <- glmer(sarscov2~1|sexo,dt,family = binomial)
AIC(m_zero)
AIC(m_random)
#test random effect
null.id = -2 * logLik(m_zero) + 2 * logLik(m_random)
pchisq(as.numeric(null.id), df=1, lower.tail=F)
summary(tableby(sexo~.,dt),text=T)
library(arsenal)
library(tidyverse)
library(redcapAPI) #redcap
library(sjlabelled) #labels
library(tidymodels)
library(stacks)
library(vip)
library(sjPlot)
library(iml) # explicar modelos
library(keras)
library(Gifi) #catpca
library(glmulti)
library(treesnip)
library(clustMixType)
library(cluster)
library(Rtsne)
library(probably) # Probability thresholds
library(gghighligt)
library(ggsci)
#library(gt)
#library(gtsummary)
#
rcon <- redcapConnection(url="https://bdp.bahia.fiocruz.br/api/", token="094F1A28D8053DABFF4A113684A69B6C")
data_sarscov <- exportReports(rcon,9070)
save(data_sarscov,file="pcrcov2.Rdata")
# load("pcrcov2.Rdata")
#Encontrar quais variáveis tem checked/unchedked
filter_checked <- Filter(function(u) any(c('Unchecked','Checked') %in% u), data_sarscov)
#nomes
names_checked <- names(filter_checked)
#aplicar código apenas nelas | all_of é para indicar que é o vetor externo
data_sarscov2 <- data_sarscov %>% mutate_at(all_of(names_checked), function(x) case_when(x=="Checked"~"Sim",x=="Unchecked"~"Não"))
data_sarscov <- copy_labels(data_sarscov2,data_sarscov)
data_sarscov_raw <- data_sarscov
data_sarscov_raw$tempo_pos_sintomas <- lubridate::time_length(data_sarscov_raw$data_retorno - data_sarscov_raw$datainicsint,unit = "days")
data_sarscov_raw$tempo_pos_sintomas_sequela <- lubridate::time_length(data_sarscov_raw$data_ligacao_sequela - data_sarscov_raw$datainicsint,unit = "days")
data_sarscov_clean <- data_sarscov %>%
filter(idade>=10,
ligseguimento=="Sim",
(tempo_sintomas_pcr<=7 & pcrscov2=="Negativo")|pcrscov2=="Positivo"|(tempo_sint_elisa>5 & elisascov2=="Positivo")|(tempo_sint_elisa>=14 & elisascov2=="Negativo"))
data_sarscov_2 <- data_sarscov_raw %>% filter((tempo_sintomas_pcr<8 & (pcrscov2=="Negativo" |pcrscov2=="Positivo")) |(tempo_sint_elisa>5 & elisascov2=="Positivo") )
# Capturar sintomas não relatados na fase aguda
# for (i in names(data_sarscov)[21:42]){
#   print(paste0(i,"=case_when(",paste0(i,"_retorno",paste0("==","Sim","~","Sim",",","TRUE","~","as.character("),paste0(i,")),"))),quote=F,row.names = "")
# }
# data_sarscov %>% count(espirro)
data_sarscov_clean <- data_sarscov_clean %>%
rowwise() %>%
mutate(no_primeiros_sintomas = sum(c_across(primeirosintoma___0:primeirosintoma___15) == "Sim"))
data_cov <- data_sarscov_clean %>% mutate(
faltadear = case_when(faltadear_retorno == "Sim" ~ "Sim", TRUE ~ as.character(faltadear)),
obstrucaonasal = case_when(obstrucaonasal_retorno == "Sim" ~ "Sim", TRUE ~ as.character(obstrucaonasal)),
dorgarganta = case_when(dorgarganta_retorno == "Sim" ~ "Sim", TRUE ~ as.character(dorgarganta)),
espirro = case_when(espirro_retorno == "Sim" ~ "Sim", TRUE ~ as.character(espirro)),
dorface = case_when(dorface_retorno == "Sim" ~ "Sim", TRUE ~ as.character(dorface)),
dorcabeca = case_when(dorcabeca_retorno == "Sim" ~ "Sim", TRUE ~ as.character(dorcabeca)),
dorolho = case_when(dorolho_retorno == "Sim" ~ "Sim", TRUE ~ as.character(dorolho)),
dorouvido = case_when(dorouvido_retorno == "Sim" ~ "Sim", TRUE ~ as.character(dorouvido)),
mialgia = case_when(mialgia_retorno == "Sim" ~ "Sim", TRUE ~ as.character(mialgia)),
artralgia = case_when(artralgia_retorno == "Sim" ~ "Sim", TRUE ~ as.character(artralgia)),
dorpeito = case_when(dorpeito_retorno == "Sim" ~ "Sim", TRUE ~ as.character(dorpeito)),
dorabdominal = case_when(dorabdominal_retorno == "Sim" ~ "Sim", TRUE ~ as.character(dorabdominal)),
manchacorpo = case_when(manchacorpo_retorno == "Sim" ~ "Sim", TRUE ~ as.character(manchacorpo)),
fraqueza = case_when(fraqueza_retorno == "Sim" ~ "Sim", TRUE ~ as.character(fraqueza)),
perdaapetite = case_when(perdaapetite_retorno == "Sim" ~ "Sim", TRUE ~ as.character(perdaapetite)),
enjoo = case_when(enjoo_retorno == "Sim" ~ "Sim", TRUE ~ as.character(enjoo)),
diarreia = case_when(diarreia_retorno == "Sim" ~ "Sim", TRUE ~ as.character(diarreia)),
anosmia = case_when(anosmia_retorno == "Sim" ~ "Sim", TRUE ~ as.character(anosmia)),
pressaobaixa = case_when(pressaobaixa_retorno == "Sim" ~ "Sim", TRUE ~ as.character(pressaobaixa)),
ageusia = case_when(ageusia_retorno == "Sim" ~ "Sim", TRUE ~ as.character(ageusia)),
febre = case_when(febre_retorno == "Sim" ~ "Sim", TRUE ~ as.character(febre)),
tosse = case_when(tosse_retorno == "Sim" ~ "Sim", TRUE ~ as.character(tosse)),
sintoma_sensitivo = case_when(ageusia == "Sim" | anosmia=="sim" ~ "Sim",ageusia == "Não" & anosmia=="Não" ~ "Não" , TRUE ~ as.character(tosse))
)
dt <- data_cov %>% dplyr::select(c(2,3,21:44))
dt <- dt %>% mutate(sarscov2=factor(case_when(
pcrscov2 %in% "Positivo" | elisascov2 %in% "Positivo" ~"Positivo",
pcrscov2 %in% "Negativo" | elisascov2 %in% "Negativo" ~"Negativo"
))) %>% dplyr::select(-c(pcrscov2,elisascov2))
f <- lrm(sarscov2~dorgarganta+dorolho+artralgia+idade*diarreia+anosmia*sexo+idade*espirro+idade*tosse+idade*fraqueza+manchacorpo+idade*mialgia+sexo*fraqueza,dt)
f <- update(f,x=TRUE,y=TRUE)
library(rms)
f <- lrm(sarscov2~dorgarganta+dorolho+artralgia+idade*diarreia+anosmia*sexo+idade*espirro+idade*tosse+idade*fraqueza+manchacorpo+idade*mialgia+sexo*fraqueza,dt)
f <- update(f,x=TRUE,y=TRUE)
p8 <- pentrace(fit = f, penalty = 0:20)
p8
p8 <- pentrace(fit = f, penalty = 0:25)
p8
full8.penal <- update(f, penalty = p8$penalty)
full8.penal
res.df$Penalized <- coef(full8.penal)[-1]
f
f$coefficients
remotes::install_github("tysonstanley/dissertateUSU")
setwd("E:/Academic/github/Tese_v2/CC-diss-rmd-main")
setwd("E:/Academic/github/Tese_v2/CC-diss-rmd-main")
remotes::install_github("tysonstanley/dissertateUSU")
remotes::install_github("tysonstanley/dissertateUSU", force=T)
tinytex::tlmgr(c('option', 'repository',
'http://linorg.usp.br/CTAN/systems/texlive/tlnet/')
tinytex::tlmgr(c('option', 'repository',
'http://linorg.usp.br/CTAN/systems/texlive/tlnet/'))
